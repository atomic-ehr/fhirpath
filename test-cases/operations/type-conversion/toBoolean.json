{
  "name": "ToBoolean Function Tests",
  "description": "Tests for the toBoolean() function",
  "tests": [
    {
      "name": "toBoolean - string 'true'",
      "expression": "'true'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'TRUE' (case insensitive)",
      "expression": "'TRUE'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string", "case-insensitive"]
    },
    {
      "name": "toBoolean - string 't'",
      "expression": "'t'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'T' (case insensitive)",
      "expression": "'T'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string", "case-insensitive"]
    },
    {
      "name": "toBoolean - string 'yes'",
      "expression": "'yes'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'y'",
      "expression": "'y'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string '1'",
      "expression": "'1'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string '1.0'",
      "expression": "'1.0'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'false'",
      "expression": "'false'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'FALSE' (case insensitive)",
      "expression": "'FALSE'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string", "case-insensitive"]
    },
    {
      "name": "toBoolean - string 'f'",
      "expression": "'f'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'no'",
      "expression": "'no'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string 'n'",
      "expression": "'n'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string '0'",
      "expression": "'0'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - string '0.0'",
      "expression": "'0.0'.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string"]
    },
    {
      "name": "toBoolean - integer 1",
      "expression": "1.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "integer"]
    },
    {
      "name": "toBoolean - integer 0",
      "expression": "0.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "integer"]
    },
    {
      "name": "toBoolean - decimal 1.0",
      "expression": "1.0.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "decimal"]
    },
    {
      "name": "toBoolean - decimal 0.0",
      "expression": "0.0.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "decimal"]
    },
    {
      "name": "toBoolean - boolean true (identity)",
      "expression": "true.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "identity"]
    },
    {
      "name": "toBoolean - boolean false (identity)",
      "expression": "false.toBoolean()",
      "expected": [false],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "identity"]
    },
    {
      "name": "toBoolean - invalid string",
      "expression": "'maybe'.toBoolean()",
      "expected": [],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "invalid", "string"]
    },
    {
      "name": "toBoolean - invalid integer",
      "expression": "2.toBoolean()",
      "expected": [],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "invalid", "integer"]
    },
    {
      "name": "toBoolean - invalid decimal",
      "expression": "0.5.toBoolean()",
      "expected": [],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "invalid", "decimal"]
    },
    {
      "name": "toBoolean - empty input",
      "expression": "({}).toBoolean()",
      "expected": [],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "empty"]
    },
    {
      "name": "toBoolean - multiple items error",
      "expression": "(true | false).toBoolean()",
      "error": "toBoolean() can only be applied to a single item",
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "error", "multiple"]
    },
    {
      "name": "toBoolean - object returns empty",
      "expression": "Patient.toBoolean()",
      "input": {"resourceType": "Patient", "id": "123"},
      "expected": [],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "object", "empty"]
    },
    {
      "name": "toBoolean - mixed case 'YeS'",
      "expression": "'YeS'.toBoolean()",
      "expected": [true],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "string", "case-insensitive"]
    },
    {
      "name": "toBoolean - negative integer",
      "expression": "(-1).toBoolean()",
      "expected": [],
      "tags": ["function", "conversion", "toBoolean", "function:toBoolean", "invalid", "integer"]
    }
  ]
}