{
  "name": "IsDistinct Function Tests",
  "description": "Tests for the isDistinct() function",
  "tests": [
    {
      "name": "isDistinct - no duplicates",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            1,
            2,
            3,
            4
          ]
        }
      ],
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct"
      ]
    },
    {
      "name": "isDistinct - has duplicates",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            1,
            2,
            2,
            3
          ]
        }
      ],
      "expected": [
        false
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct"
      ]
    },
    {
      "name": "isDistinct - empty collection returns true",
      "expression": "empty.isDistinct()",
      "input": [
        {
          "empty": []
        }
      ],
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "empty"
      ]
    },
    {
      "name": "isDistinct - single item returns true",
      "expression": "(5).isDistinct()",
      "input": null,
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "singleton"
      ]
    },
    {
      "name": "isDistinct - all duplicates",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            "a",
            "a",
            "a"
          ]
        }
      ],
      "expected": [
        false
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct"
      ]
    },
    {
      "name": "isDistinct - string values distinct",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            "apple",
            "banana",
            "cherry"
          ]
        }
      ],
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "string"
      ]
    },
    {
      "name": "isDistinct - string values with duplicate",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            "apple",
            "banana",
            "apple"
          ]
        }
      ],
      "expected": [
        false
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "string"
      ]
    },
    {
      "name": "isDistinct - boolean values distinct",
      "expression": "(true | false).isDistinct()",
      "input": null,
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "boolean"
      ]
    },
    {
      "name": "isDistinct - boolean values with duplicate",
      "expression": "(true | false | true).isDistinct()",
      "input": null,
      "expected": [
        false
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "boolean"
      ]
    },
    {
      "name": "isDistinct - direct empty collection",
      "expression": "({}).isDistinct()",
      "input": null,
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "empty"
      ]
    },
    {
      "name": "isDistinct - error on arguments",
      "expression": "values.isDistinct('test')",
      "input": [
        {
          "values": [1, 2, 3]
        }
      ],
      "expected": [],
      "error": {
        "type": "Error",
        "message": "isDistinct\\(\\) takes no arguments"
      },
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "error"
      ]
    },
    {
      "name": "isDistinct - decimal values",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            1.1,
            1.2,
            1.3,
            1.1
          ]
        }
      ],
      "expected": [
        false
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "decimal"
      ]
    },
    {
      "name": "isDistinct - mixed types",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            1,
            "1",
            true
          ]
        }
      ],
      "expected": [
        true
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "mixed-types"
      ]
    },
    {
      "name": "isDistinct - null values",
      "expression": "values.isDistinct()",
      "input": [
        {
          "values": [
            null,
            null,
            1
          ]
        }
      ],
      "expected": [
        false
      ],
      "tags": [
        "function",
        "aggregate",
        "isDistinct",
        "function:isDistinct",
        "null"
      ]
    }
  ]
}