{
  "name": "Truncate Function Tests",
  "description": "Tests for the truncate() function",
  "tests": [
    {
      "name": "truncate - integer",
      "expression": "101.truncate()",
      "input": [],
      "expected": [
        101
      ],
      "tags": [
        "math",
        "truncate"
      ]
    },
    {
      "name": "truncate - positive decimal",
      "expression": "1.00000001.truncate()",
      "input": [],
      "expected": [
        1
      ],
      "tags": [
        "math",
        "truncate"
      ]
    },
    {
      "name": "truncate - negative decimal",
      "expression": "(-1.56).truncate()",
      "input": [],
      "expected": [
        -1
      ],
      "tags": [
        "math",
        "truncate"
      ]
    },
    {
      "name": "truncate - positive large decimal",
      "expression": "2.99999.truncate()",
      "input": [],
      "expected": [
        2
      ],
      "tags": [
        "math",
        "truncate"
      ]
    },
    {
      "name": "truncate - negative large decimal",
      "expression": "(-2.99999).truncate()",
      "input": [],
      "expected": [
        -2
      ],
      "tags": [
        "math",
        "truncate"
      ]
    },
    {
      "name": "truncate - zero",
      "expression": "0.truncate()",
      "input": [],
      "expected": [
        0
      ],
      "tags": [
        "math",
        "truncate"
      ]
    },
    {
      "name": "truncate - compare with floor positive",
      "expression": "2.7.truncate() = 2.7.floor()",
      "input": [],
      "expected": [
        true
      ],
      "tags": [
        "math",
        "truncate",
        "floor",
        "comparison"
      ]
    },
    {
      "name": "truncate - compare with floor negative different",
      "expression": "(-2.7).truncate() != (-2.7).floor()",
      "input": [],
      "expected": [
        true
      ],
      "tags": [
        "math",
        "truncate",
        "floor",
        "comparison"
      ]
    },
    {
      "name": "truncate - empty input",
      "expression": "{ }.truncate()",
      "input": [],
      "expected": [],
      "tags": [
        "math",
        "truncate",
        "empty"
      ]
    },
    {
      "name": "truncate - multiple items error",
      "expression": "(1.1 | 2.2).truncate()",
      "input": [],
      "error": {
        "type": "Error",
        "phase": "analyze",
        "code": "FP2003"
      },
      "tags": [
        "math",
        "truncate",
        "error"
      ]
    },
    {
      "name": "truncate - with arguments error",
      "expression": "1.5.truncate(1)",
      "input": [],
      "error": {
        "type": "Error",
        "phase": "analyze",
        "code": "FP2001"
      },
      "tags": [
        "math",
        "truncate",
        "error"
      ]
    },
    {
      "name": "truncate - on string error",
      "expression": "'1.5'.truncate()",
      "input": [],
      "error": {
        "type": "Error",
        "code": "FP3006",
        "phase": "analyze"
      },
      "tags": [
        "math",
        "truncate",
        "error",
        "type"
      ]
    }
  ]
}
