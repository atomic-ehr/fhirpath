name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test & Typecheck
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Cache FHIR packages
        uses: actions/cache@v4
        with:
          path: .test-fhir-cache
          key: fhir-cache-${{ runner.os }}-${{ hashFiles('**/model-provider.test.ts', '**/analyzer.test.ts') }}
          restore-keys: |
            fhir-cache-${{ runner.os }}-
      
      - name: Install dependencies
        run: bun install
        
      - name: Pre-install FHIR packages for tests
        run: |
          mkdir -p .test-fhir-cache
          cd .test-fhir-cache
          echo '{"name":"fhir-canonical-manager-workspace","version":"1.0.0","private":true,"dependencies":{"hl7.fhir.r4.core":"^4.0.1"}}' > package.json
          bun install
          cd ..
        
      - name: Run typecheck
        run: bunx tsc --noEmit
        
      - name: Run tests
        run: bun test 

  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Cache FHIR packages
        uses: actions/cache@v4
        with:
          path: .test-fhir-cache
          key: fhir-cache-${{ runner.os }}-${{ hashFiles('**/model-provider.test.ts', '**/analyzer.test.ts') }}
          restore-keys: |
            fhir-cache-${{ runner.os }}-
      
      - name: Install dependencies
        run: bun install
        
      - name: Pre-install FHIR packages for tests
        run: |
          mkdir -p .test-fhir-cache
          cd .test-fhir-cache
          echo '{"name":"fhir-canonical-manager-workspace","version":"1.0.0","private":true,"dependencies":{"hl7.fhir.r4.core":"^4.0.1"}}' > package.json
          bun install
          cd ..
        
      - name: Run typecheck
        run: bunx tsc --noEmit
        
      - name: Run tests
        run: bun test

  test-windows:
    name: Test on Windows
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Cache FHIR packages
        uses: actions/cache@v4
        with:
          path: .test-fhir-cache
          key: fhir-cache-${{ runner.os }}-${{ hashFiles('**/model-provider.test.ts', '**/analyzer.test.ts') }}
          restore-keys: |
            fhir-cache-${{ runner.os }}-
      
      - name: Install dependencies
        run: bun install
        
      - name: Pre-install FHIR packages for tests
        run: |
          mkdir -p .test-fhir-cache
          cd .test-fhir-cache
          echo '{"name":"fhir-canonical-manager-workspace","version":"1.0.0","private":true,"dependencies":{"hl7.fhir.r4.core":"^4.0.1"}}' > package.json
          bun install
          cd ..
        
      - name: Run typecheck
        run: bunx tsc --noEmit
        
      - name: Run tests
        run: bun test