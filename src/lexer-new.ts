export enum TokenType {
  // Literals
  NULL,
  BOOLEAN,
  STRING,
  NUMBER,
  DATETIME,
  TIME,
  
  // Identifiers
  IDENTIFIER,
  DELIMITED_IDENTIFIER,
  
  // Keywords
  TRUE,
  FALSE,
  AS,
  IS,
  IN,
  CONTAINS,
  DIV,
  MOD,
  AND,
  OR,
  XOR,
  IMPLIES,
  
  // Special identifiers
  THIS,
  INDEX,
  TOTAL,
  
  // Environment variable
  ENV_VAR,
  
  // Date/time units
  YEAR,
  MONTH,
  WEEK,
  DAY,
  HOUR,
  MINUTE,
  SECOND,
  MILLISECOND,
  YEARS,
  MONTHS,
  WEEKS,
  DAYS,
  HOURS,
  MINUTES,
  SECONDS,
  MILLISECONDS,
  
  // Operators
  DOT,
  PLUS,
  MINUS,
  MULTIPLY,
  DIVIDE,
  AMPERSAND,
  PIPE,
  LT,
  GT,
  LTE,
  GTE,
  EQ,
  NEQ,
  SIMILAR,
  NOT_SIMILAR,
  
  // Delimiters
  LPAREN,
  RPAREN,
  LBRACKET,
  RBRACKET,
  LBRACE,
  RBRACE,
  COMMA,
  PERCENT,
  AT,
  
  // Special
  EOF,
  WHITESPACE,
  COMMENT,
  LINE_COMMENT,
}

// Create a reverse mapping for debugging
export const tokenTypeNames = new Map<TokenType, string>([
  [TokenType.NULL, 'NULL'],
  [TokenType.BOOLEAN, 'BOOLEAN'],
  [TokenType.STRING, 'STRING'],
  [TokenType.NUMBER, 'NUMBER'],
  [TokenType.DATETIME, 'DATETIME'],
  [TokenType.TIME, 'TIME'],
  [TokenType.IDENTIFIER, 'IDENTIFIER'],
  [TokenType.DELIMITED_IDENTIFIER, 'DELIMITED_IDENTIFIER'],
  [TokenType.TRUE, 'TRUE'],
  [TokenType.FALSE, 'FALSE'],
  [TokenType.AS, 'AS'],
  [TokenType.IS, 'IS'],
  [TokenType.IN, 'IN'],
  [TokenType.CONTAINS, 'CONTAINS'],
  [TokenType.DIV, 'DIV'],
  [TokenType.MOD, 'MOD'],
  [TokenType.AND, 'AND'],
  [TokenType.OR, 'OR'],
  [TokenType.XOR, 'XOR'],
  [TokenType.IMPLIES, 'IMPLIES'],
  [TokenType.THIS, 'THIS'],
  [TokenType.INDEX, 'INDEX'],
  [TokenType.TOTAL, 'TOTAL'],
  [TokenType.DOT, 'DOT'],
  [TokenType.PLUS, 'PLUS'],
  [TokenType.MINUS, 'MINUS'],
  [TokenType.MULTIPLY, 'MULTIPLY'],
  [TokenType.DIVIDE, 'DIVIDE'],
  [TokenType.AMPERSAND, 'AMPERSAND'],
  [TokenType.PIPE, 'PIPE'],
  [TokenType.LT, 'LT'],
  [TokenType.GT, 'GT'],
  [TokenType.LTE, 'LTE'],
  [TokenType.GTE, 'GTE'],
  [TokenType.EQ, 'EQ'],
  [TokenType.NEQ, 'NEQ'],
  [TokenType.SIMILAR, 'SIMILAR'],
  [TokenType.NOT_SIMILAR, 'NOT_SIMILAR'],
  [TokenType.LPAREN, 'LPAREN'],
  [TokenType.RPAREN, 'RPAREN'],
  [TokenType.LBRACKET, 'LBRACKET'],
  [TokenType.RBRACKET, 'RBRACKET'],
  [TokenType.LBRACE, 'LBRACE'],
  [TokenType.RBRACE, 'RBRACE'],
  [TokenType.COMMA, 'COMMA'],
  [TokenType.PERCENT, 'PERCENT'],
  [TokenType.AT, 'AT'],
  [TokenType.ENV_VAR, 'ENV_VAR'],
  [TokenType.YEAR, 'YEAR'],
  [TokenType.MONTH, 'MONTH'],
  [TokenType.WEEK, 'WEEK'],
  [TokenType.DAY, 'DAY'],
  [TokenType.HOUR, 'HOUR'],
  [TokenType.MINUTE, 'MINUTE'],
  [TokenType.SECOND, 'SECOND'],
  [TokenType.MILLISECOND, 'MILLISECOND'],
  [TokenType.YEARS, 'YEARS'],
  [TokenType.MONTHS, 'MONTHS'],
  [TokenType.WEEKS, 'WEEKS'],
  [TokenType.DAYS, 'DAYS'],
  [TokenType.HOURS, 'HOURS'],
  [TokenType.MINUTES, 'MINUTES'],
  [TokenType.SECONDS, 'SECONDS'],
  [TokenType.MILLISECONDS, 'MILLISECONDS'],
  [TokenType.EOF, 'EOF'],
  [TokenType.WHITESPACE, 'WHITESPACE'],
  [TokenType.COMMENT, 'COMMENT'],
  [TokenType.LINE_COMMENT, 'LINE_COMMENT'],
]);

export function tokenTypeToString(type: TokenType): string {
  return tokenTypeNames.get(type) || `UNKNOWN(${type})`;
}