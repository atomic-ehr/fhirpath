[
  "(ActivityDefinition.useContext.value.ofType(Quantity)) | (ActivityDefinition.useContext.value.ofType(Range)) | (ActorDefinition.useContext.value.ofType(Quantity)) | (ActorDefinition.useContext.value.ofType(Range)) | (CapabilityStatement.useContext.value.ofType(Quantity)) | (CapabilityStatement.useContext.value.ofType(Range)) | (ChargeItemDefinition.useContext.value.ofType(Quantity)) | (ChargeItemDefinition.useContext.value.ofType(Range)) | (Citation.useContext.value.ofType(Quantity)) | (Citation.useContext.value.ofType(Range)) | (CodeSystem.useContext.value.ofType(Quantity)) | (CodeSystem.useContext.value.ofType(Range)) | (CompartmentDefinition.useContext.value.ofType(Quantity)) | (CompartmentDefinition.useContext.value.ofType(Range)) | (ConceptMap.useContext.value.ofType(Quantity)) | (ConceptMap.useContext.value.ofType(Range)) | (ConditionDefinition.useContext.value.ofType(Quantity)) | (ConditionDefinition.useContext.value.ofType(Range)) | (EventDefinition.useContext.value.ofType(Quantity)) | (EventDefinition.useContext.value.ofType(Range)) | (Evidence.useContext.value.ofType(Quantity)) | (Evidence.useContext.value.ofType(Range)) | (EvidenceVariable.useContext.value.ofType(Quantity)) | (EvidenceVariable.useContext.value.ofType(Range)) | (ExampleScenario.useContext.value.ofType(Quantity)) | (ExampleScenario.useContext.value.ofType(Range)) | (GraphDefinition.useContext.value.ofType(Quantity)) | (GraphDefinition.useContext.value.ofType(Range)) | (ImplementationGuide.useContext.value.ofType(Quantity)) | (ImplementationGuide.useContext.value.ofType(Range)) | (Library.useContext.value.ofType(Quantity)) | (Library.useContext.value.ofType(Range)) | (Measure.useContext.value.ofType(Quantity)) | (Measure.useContext.value.ofType(Range)) | (MessageDefinition.useContext.value.ofType(Quantity)) | (MessageDefinition.useContext.value.ofType(Range)) | (NamingSystem.useContext.value.ofType(Quantity)) | (NamingSystem.useContext.value.ofType(Range)) | (OperationDefinition.useContext.value.ofType(Quantity)) | (OperationDefinition.useContext.value.ofType(Range)) | (PlanDefinition.useContext.value.ofType(Quantity)) | (PlanDefinition.useContext.value.ofType(Range)) | (Questionnaire.useContext.value.ofType(Quantity)) | (Questionnaire.useContext.value.ofType(Range)) | (Requirements.useContext.value.ofType(Quantity)) | (Requirements.useContext.value.ofType(Range)) | (SearchParameter.useContext.value.ofType(Quantity)) | (SearchParameter.useContext.value.ofType(Range)) | (StructureDefinition.useContext.value.ofType(Quantity)) | (StructureDefinition.useContext.value.ofType(Range)) | (StructureMap.useContext.value.ofType(Quantity)) | (StructureMap.useContext.value.ofType(Range)) | (TerminologyCapabilities.useContext.value.ofType(Quantity)) | (TerminologyCapabilities.useContext.value.ofType(Range)) | (TestPlan.useContext.value.ofType(Quantity)) | (TestPlan.useContext.value.ofType(Range)) | (TestScript.useContext.value.ofType(Quantity)) | (TestScript.useContext.value.ofType(Range)) | (ValueSet.useContext.value.ofType(Quantity)) | (ValueSet.useContext.value.ofType(Range))",
  "(Citation.classification.classifier)",
  "(Citation.classification.type)",
  "(ConceptMap.sourceScope as canonical)",
  "(ConceptMap.targetScope as canonical)",
  "(ConceptMap.targetScope as uri)",
  "(DeviceRequest.occurrence.ofType(dateTime)) | (DeviceRequest.occurrence.ofType(Period))",
  "(DocumentReference.content.profile.value.ofType(Coding))",
  "(DocumentReference.content.profile.value.ofType(canonical))",
  "(DocumentReference.content.profile.value.ofType(uri))",
  "(Goal.start.ofType(date))",
  "(Goal.target.due.ofType(date))",
  "(Group.characteristic.value.ofType(CodeableConcept)) | (Group.characteristic.value.ofType(boolean))",
  "(NutritionIntake.reported as Reference)",
  "(Patient.deceased.ofType(dateTime))",
  "(Person.deceased.ofType(dateTime))",
  "(Practitioner.deceased.ofType(dateTime))",
  "Account.guarantor.account",
  "Account.guarantor.party",
  "Account.name",
  "Account.owner",
  "Account.servicePeriod",
  "Account.status",
  "Account.subject",
  "Account.type | AllergyIntolerance.type | Composition.type | Coverage.type | DocumentReference.type | Encounter.type | EpisodeOfCare.type | Invoice.type | MedicationDispense.type | MolecularSequence.type | Specimen.type",
  "ActivityDefinition.date | ActorDefinition.date | CapabilityStatement.date | ChargeItemDefinition.date | Citation.date | CodeSystem.date | CompartmentDefinition.date | ConceptMap.date | ConditionDefinition.date | EventDefinition.date | Evidence.date | EvidenceVariable.date | ExampleScenario.date | GraphDefinition.date | ImplementationGuide.date | Library.date | Measure.date | MessageDefinition.date | NamingSystem.date | OperationDefinition.date | PlanDefinition.date | Questionnaire.date | Requirements.date | SearchParameter.date | StructureDefinition.date | StructureMap.date | SubscriptionTopic.date | TerminologyCapabilities.date | TestPlan.date | TestScript.date | ValueSet.date",
  "ActivityDefinition.effectivePeriod | ChargeItemDefinition.applicability.effectivePeriod | Citation.effectivePeriod | CodeSystem.effectivePeriod | ConceptMap.effectivePeriod | EventDefinition.effectivePeriod | Library.effectivePeriod | Measure.effectivePeriod | NamingSystem.effectivePeriod | PlanDefinition.effectivePeriod | Questionnaire.effectivePeriod | ValueSet.effectivePeriod",
  "ActivityDefinition.identifier | ActorDefinition.identifier | CapabilityStatement.identifier | ChargeItemDefinition.identifier | Citation.identifier | CodeSystem.identifier | ConceptMap.identifier | ConditionDefinition.identifier | DeviceDefinition.identifier | DeviceDefinition.udiDeviceIdentifier | EventDefinition.identifier | Evidence.identifier | EvidenceVariable.identifier | ExampleScenario.identifier | GraphDefinition.identifier | Group.identifier | ImplementationGuide.identifier | Library.identifier | Measure.identifier | MedicationKnowledge.identifier | MessageDefinition.identifier | NamingSystem.identifier | ObservationDefinition.identifier | OperationDefinition.identifier | PlanDefinition.identifier | Questionnaire.identifier | Requirements.identifier | SearchParameter.identifier | SpecimenDefinition.identifier | StructureDefinition.identifier | StructureMap.identifier | SubscriptionTopic.identifier | TerminologyCapabilities.identifier | TestPlan.identifier | TestScript.identifier | ValueSet.identifier",
  "ActivityDefinition.kind",
  "ActivityDefinition.name | CapabilityStatement.name | Citation.name | CodeSystem.name | CompartmentDefinition.name | ConceptMap.name | ConditionDefinition.name | EventDefinition.name | EvidenceVariable.name | ExampleScenario.name | GraphDefinition.name | Group.name | ImplementationGuide.name | Library.name | Measure.name | MessageDefinition.name | NamingSystem.name | OperationDefinition.name | PlanDefinition.name | Questionnaire.name | Requirements.name | SearchParameter.name | StructureDefinition.name | StructureMap.name | TerminologyCapabilities.name | TestPlan.name | TestScript.name | ValueSet.name",
  "ActivityDefinition.relatedArtifact.where(type='depends-on').resource | ActivityDefinition.library | EventDefinition.relatedArtifact.where(type='depends-on').resource | Library.relatedArtifact.where(type='depends-on').resource | Measure.relatedArtifact.where(type='depends-on').resource | Measure.library | PlanDefinition.relatedArtifact.where(type='depends-on').resource | PlanDefinition.library",
  "ActivityDefinition.relatedArtifact.where(type='derived-from').resource | CodeSystem.relatedArtifact.where(type='derived-from').resource | ConceptMap.relatedArtifact.where(type='derived-from').resource | EventDefinition.relatedArtifact.where(type='derived-from').resource | Library.relatedArtifact.where(type='derived-from').resource | Measure.relatedArtifact.where(type='derived-from').resource | NamingSystem.relatedArtifact.where(type='derived-from').resource | PlanDefinition.relatedArtifact.where(type='derived-from').resource | ValueSet.relatedArtifact.where(type='derived-from').resource",
  "ActivityDefinition.relatedArtifact.where(type='predecessor').resource | CodeSystem.relatedArtifact.where(type='predecessor').resource | ConceptMap.relatedArtifact.where(type='predecessor').resource | EventDefinition.relatedArtifact.where(type='predecessor').resource | Library.relatedArtifact.where(type='predecessor').resource | Measure.relatedArtifact.where(type='predecessor').resource | NamingSystem.relatedArtifact.where(type='predecessor').resource | PlanDefinition.relatedArtifact.where(type='predecessor').resource | ValueSet.relatedArtifact.where(type='predecessor').resource",
  "ActivityDefinition.status | ActorDefinition.status | CapabilityStatement.status | ChargeItemDefinition.status | Citation.status | CodeSystem.status | CompartmentDefinition.status | ConceptMap.status | ConditionDefinition.status | EventDefinition.status | Evidence.status | EvidenceVariable.status | ExampleScenario.status | GraphDefinition.status | Group.status | ImplementationGuide.status | Library.status | Measure.status | MedicationKnowledge.status | MessageDefinition.status | NamingSystem.status | ObservationDefinition.status | OperationDefinition.status | PlanDefinition.status | Questionnaire.status | Requirements.status | SearchParameter.status | SpecimenDefinition.status | StructureDefinition.status | StructureMap.status | SubscriptionTopic.status | TerminologyCapabilities.status | TestPlan.status | TestScript.status | ValueSet.status",
  "ActivityDefinition.subject as CodeableConcept",
  "ActivityDefinition.subject as Reference",
  "ActivityDefinition.subject as canonical",
  "ActivityDefinition.title | ActorDefinition.title | CapabilityStatement.title | ChargeItemDefinition.title | Citation.title | CodeSystem.title | ConceptMap.title | ConditionDefinition.title | EventDefinition.title | Evidence.title | EvidenceVariable.title | ImplementationGuide.title | Library.title | Measure.title | MessageDefinition.title | ObservationDefinition.title | OperationDefinition.title | PlanDefinition.title | Questionnaire.title | Requirements.title | SpecimenDefinition.title | StructureDefinition.title | StructureMap.title | SubscriptionTopic.title | TerminologyCapabilities.title | TestPlan.title | TestScript.title | ValueSet.title",
  "ActivityDefinition.topic | CodeSystem.topic | ConceptMap.topic | EventDefinition.topic | Library.topic | Measure.topic | NamingSystem.topic | PlanDefinition.topic | ValueSet.topic",
  "ActivityDefinition.useContext | ActorDefinition.useContext | CapabilityStatement.useContext | ChargeItemDefinition.useContext | Citation.useContext | CodeSystem.useContext | CompartmentDefinition.useContext | ConceptMap.useContext | ConditionDefinition.useContext | EventDefinition.useContext | Evidence.useContext | EvidenceVariable.useContext | ExampleScenario.useContext | GraphDefinition.useContext | ImplementationGuide.useContext | Library.useContext | Measure.useContext | MessageDefinition.useContext | NamingSystem.useContext | OperationDefinition.useContext | PlanDefinition.useContext | Questionnaire.useContext | Requirements.useContext | SearchParameter.useContext | StructureDefinition.useContext | StructureMap.useContext | TerminologyCapabilities.useContext | TestPlan.useContext | TestScript.useContext | ValueSet.useContext",
  "ActivityDefinition.version | ActorDefinition.version | CapabilityStatement.version | ChargeItemDefinition.version | Citation.version | CodeSystem.version | CompartmentDefinition.version | ConceptMap.version | ConditionDefinition.version | DeviceDefinition.deviceVersion.value | EventDefinition.version | Evidence.version | EvidenceVariable.version | ExampleScenario.version | GraphDefinition.version | ImplementationGuide.version | Library.version | Measure.version | MessageDefinition.version | NamingSystem.version | OperationDefinition.version | PlanDefinition.version | Questionnaire.version | Requirements.version | SearchParameter.version | StructureDefinition.version | StructureMap.version | SubscriptionTopic.version | TerminologyCapabilities.version | TestPlan.version | TestScript.version | ValueSet.version",
  "ActorDefinition.type",
  "AdministrableProductDefinition.administrableDoseForm",
  "AdministrableProductDefinition.device",
  "AdministrableProductDefinition.formOf",
  "AdministrableProductDefinition.identifier",
  "AdministrableProductDefinition.ingredient",
  "AdministrableProductDefinition.producedFrom",
  "AdministrableProductDefinition.routeOfAdministration.code",
  "AdministrableProductDefinition.status",
  "AdverseEvent.actuality",
  "AdverseEvent.category",
  "AdverseEvent.cause.ofType(dateTime) | AdverseEvent.cause.ofType(Period)",
  "AdverseEvent.code | AllergyIntolerance.code | AllergyIntolerance.reaction.substance | Basic.code | ChargeItem.code | Condition.code | DetectedIssue.code | DeviceRequest.code.concept | DiagnosticReport.code | FamilyMemberHistory.condition.code | ImagingSelection.code | List.code | Medication.code | MedicationAdministration.medication.concept | MedicationDispense.medication.concept | MedicationRequest.medication.concept | MedicationStatement.medication.concept | NutritionIntake.code | Observation.code | Procedure.code | RequestOrchestration.code | Task.code",
  "AdverseEvent.effect.ofType(dateTime) | AdverseEvent.effect.ofType(Period)",
  "AdverseEvent.location",
  "AdverseEvent.recorder",
  "AdverseEvent.resultingEffect.concept",
  "AdverseEvent.resultingEffect.reference",
  "AdverseEvent.seriousness",
  "AdverseEvent.status",
  "AdverseEvent.subject",
  "AdverseEvent.suspectEntity.instance.reference",
  "AllergyIntolerance.asserter",
  "AllergyIntolerance.category",
  "AllergyIntolerance.clinicalStatus",
  "AllergyIntolerance.criticality",
  "AllergyIntolerance.lastReactionOccurrence",
  "AllergyIntolerance.reaction.manifestation.concept",
  "AllergyIntolerance.reaction.manifestation.reference",
  "AllergyIntolerance.reaction.severity",
  "AllergyIntolerance.recordedDate | (start | requestedPeriod.start).first() | AuditEvent.recorded | CarePlan.period | Composition.date | Consent.date | DiagnosticReport.effective.ofType(dateTime) | DiagnosticReport.effective.ofType(Period) | DocumentReference.date | Encounter.actualPeriod | EpisodeOfCare.period | FamilyMemberHistory.date | Flag.period | (Immunization.occurrence.ofType(dateTime)) | ImmunizationEvaluation.date | ImmunizationRecommendation.date | Invoice.date | List.date | MeasureReport.date | NutritionIntake.occurrence.ofType(dateTime) | NutritionIntake.occurrence.ofType(Period) | Observation.effective.ofType(dateTime) | Observation.effective.ofType(Period) | Observation.effective.ofType(Timing) | Observation.effective.ofType(instant) | Procedure.occurrence.ofType(dateTime) | Procedure.occurrence.ofType(Period) | Procedure.occurrence.ofType(Timing) | ResearchSubject.period | (RiskAssessment.occurrence.ofType(dateTime)) | SupplyRequest.authoredOn",
  "AllergyIntolerance.verificationStatus",
  "Appointment.appointmentType",
  "Appointment.basedOn",
  "Appointment.occurrenceChanged",
  "Appointment.originatingAppointment",
  "Appointment.participant.actor",
  "Appointment.participant.actor.where(resolve() is Group) | Appointment.subject.where(resolve() is Group)",
  "Appointment.participant.actor.where(resolve() is Location)",
  "Appointment.participant.actor.where(resolve() is Practitioner)",
  "Appointment.participant.status",
  "Appointment.reason.concept",
  "Appointment.reason.reference",
  "Appointment.recurrenceTemplate.exists()",
  "Appointment.recurrenceTemplate.exists() | Appointment.originatingAppointment.exists()",
  "Appointment.serviceCategory",
  "Appointment.serviceType.concept",
  "Appointment.serviceType.reference",
  "Appointment.slot",
  "Appointment.specialty",
  "Appointment.status",
  "Appointment.subject",
  "Appointment.supportingInformation",
  "AppointmentResponse.actor.where(resolve() is Group)",
  "AppointmentResponse.actor.where(resolve() is Location)",
  "AppointmentResponse.actor.where(resolve() is Practitioner)",
  "AppointmentResponse.appointment",
  "AppointmentResponse.participantStatus",
  "ArtifactAssessment.date",
  "ArtifactAssessment.identifier",
  "AuditEvent.action",
  "AuditEvent.agent.policy",
  "AuditEvent.agent.role",
  "AuditEvent.agent.who",
  "AuditEvent.authorization | AuditEvent.agent.authorization",
  "AuditEvent.basedOn",
  "AuditEvent.entity.description",
  "AuditEvent.entity.role",
  "AuditEvent.entity.what",
  "AuditEvent.outcome.code",
  "AuditEvent.source.observer",
  "AuditEvent.subtype",
  "AuditEvent.type",
  "Basic.created",
  "Basic.subject",
  "BiologicallyDerivedProduct.biologicalSourceEvent",
  "BiologicallyDerivedProduct.collection.collector",
  "BiologicallyDerivedProduct.identifier",
  "BiologicallyDerivedProduct.productCategory",
  "BiologicallyDerivedProduct.productCode",
  "BiologicallyDerivedProduct.productStatus",
  "BiologicallyDerivedProduct.request",
  "BiologicallyDerivedProductDispense.identifier",
  "BiologicallyDerivedProductDispense.performer.actor",
  "BiologicallyDerivedProductDispense.product",
  "BiologicallyDerivedProductDispense.status",
  "BodyStructure.excludedStructure.structure",
  "BodyStructure.includedStructure.structure",
  "BodyStructure.morphology",
  "Bundle.entry[0].resource",
  "Bundle.entry[0].resource as Composition",
  "Bundle.entry[0].resource as MessageHeader",
  "Bundle.identifier",
  "Bundle.timestamp",
  "Bundle.type",
  "CapabilityStatement.fhirVersion",
  "CapabilityStatement.format",
  "CapabilityStatement.implementationGuide",
  "CapabilityStatement.rest.mode",
  "CapabilityStatement.rest.resource.profile",
  "CapabilityStatement.rest.resource.supportedProfile",
  "CapabilityStatement.rest.security.service",
  "CapabilityStatement.software.name",
  "CarePlan.activity.plannedActivityReference",
  "CarePlan.addresses.reference",
  "CarePlan.basedOn",
  "CarePlan.careTeam",
  "CarePlan.category",
  "CarePlan.custodian",
  "CarePlan.goal",
  "CarePlan.intent",
  "CarePlan.partOf",
  "CarePlan.replaces",
  "CarePlan.subject",
  "CareTeam.category",
  "CareTeam.name | CareTeam.extension('http://hl7.org/fhir/StructureDefinition/careteam-alias').value",
  "CareTeam.participant.member",
  "CareTeam.status",
  "CareTeam.subject",
  "ChargeItem.account",
  "ChargeItem.enteredDate",
  "ChargeItem.enterer",
  "ChargeItem.occurrence.ofType(dateTime) | ChargeItem.occurrence.ofType(Period) | ChargeItem.occurrence.ofType(Timing)",
  "ChargeItem.performer.actor",
  "ChargeItem.performer.function",
  "ChargeItem.performingOrganization",
  "ChargeItem.quantity",
  "ChargeItem.requestingOrganization",
  "ChargeItem.service.reference",
  "ChargeItem.status",
  "ChargeItem.subject",
  "ChargeItem.totalPriceComponent.factor",
  "ChargeItemDefinition.account",
  "Citation.classification",
  "Claim.careTeam.provider",
  "Claim.created",
  "Claim.enterer",
  "Claim.insurer",
  "Claim.item.detail.subDetail.udi",
  "Claim.item.detail.udi",
  "Claim.item.udi",
  "Claim.payee.party",
  "Claim.priority",
  "Claim.procedure.udi",
  "Claim.provider",
  "Claim.status",
  "Claim.use",
  "ClaimResponse.created",
  "ClaimResponse.disposition",
  "ClaimResponse.insurer",
  "ClaimResponse.outcome",
  "ClaimResponse.payment.date",
  "ClaimResponse.request",
  "ClaimResponse.status",
  "ClaimResponse.use",
  "ClinicalAssessment.date",
  "ClinicalAssessment.encounter",
  "ClinicalAssessment.finding.item.concept",
  "ClinicalAssessment.finding.item.reference",
  "ClinicalAssessment.identifier",
  "ClinicalAssessment.performer",
  "ClinicalAssessment.previous",
  "ClinicalAssessment.problem",
  "ClinicalAssessment.status",
  "ClinicalAssessment.subject",
  "ClinicalAssessment.subject.where(resolve() is Patient)",
  "ClinicalUseDefinition.contraindication.diseaseSymptomProcedure.concept",
  "ClinicalUseDefinition.contraindication.diseaseSymptomProcedure.reference",
  "ClinicalUseDefinition.identifier",
  "ClinicalUseDefinition.indication.diseaseSymptomProcedure.concept",
  "ClinicalUseDefinition.indication.diseaseSymptomProcedure.reference",
  "ClinicalUseDefinition.interaction.type",
  "ClinicalUseDefinition.status",
  "ClinicalUseDefinition.subject.where(resolve() is MedicinalProductDefinition)",
  "ClinicalUseDefinition.type",
  "ClinicalUseDefinition.undesirableEffect.symptomConditionEffect.concept",
  "ClinicalUseDefinition.undesirableEffect.symptomConditionEffect.reference",
  "CodeSystem.concept.code",
  "CodeSystem.concept.designation.language",
  "CodeSystem.content",
  "CodeSystem.supplements",
  "CodeSystem.url",
  "Communication.basedOn",
  "Communication.category",
  "Communication.inResponseTo",
  "Communication.medium",
  "Communication.partOf",
  "Communication.reason.reference",
  "Communication.received",
  "Communication.recipient",
  "Communication.sender",
  "Communication.sent",
  "Communication.status",
  "Communication.subject",
  "Communication.topic",
  "CommunicationRequest.about",
  "CommunicationRequest.basedOn",
  "CommunicationRequest.category",
  "CommunicationRequest.groupIdentifier",
  "CommunicationRequest.informationProvider",
  "CommunicationRequest.medium",
  "CommunicationRequest.occurrence.ofType(dateTime) | CommunicationRequest.occurrence.ofType(Period)",
  "CommunicationRequest.priority",
  "CommunicationRequest.recipient",
  "CommunicationRequest.replaces",
  "CommunicationRequest.requester",
  "CommunicationRequest.status",
  "CompartmentDefinition.code",
  "CompartmentDefinition.resource.code",
  "Composition.attester.party",
  "Composition.author",
  "Composition.category",
  "Composition.event.detail.concept",
  "Composition.event.detail.reference",
  "Composition.event.period",
  "Composition.section",
  "Composition.section.entry",
  "Composition.section.text | Composition.section.section.text",
  "Composition.status",
  "Composition.subject",
  "Composition.title",
  "Composition.url",
  "Composition.version",
  "ConceptMap.group.element.code",
  "ConceptMap.group.element.target.code",
  "ConceptMap.group.source",
  "ConceptMap.group.target",
  "ConceptMap.group.unmapped.otherMap",
  "ConceptMap.property.uri",
  "Condition.abatement.ofType(Age) | Condition.abatement.ofType(Range)",
  "Condition.abatement.ofType(dateTime) | Condition.abatement.ofType(Period)",
  "Condition.abatement.ofType(string)",
  "Condition.asserter",
  "Condition.bodySite",
  "Condition.category",
  "Condition.clinicalStatus",
  "Condition.evidence.concept",
  "Condition.onset.ofType(Age) | Condition.onset.ofType(Range)",
  "Condition.onset.ofType(dateTime) | Condition.onset.ofType(Period)",
  "Condition.onset.ofType(string)",
  "Condition.recordedDate",
  "Condition.severity",
  "Condition.stage.summary",
  "Condition.subject",
  "Condition.verificationStatus",
  "Consent.category",
  "Consent.controller",
  "Consent.grantee",
  "Consent.manager",
  "Consent.provision.actor.reference",
  "Consent.provision.code",
  "Consent.provision.period",
  "Consent.provision.purpose",
  "Consent.provision.securityLabel",
  "Consent.sourceReference",
  "Consent.status",
  "Consent.subject",
  "Consent.verification.verificationDate",
  "Consent.verification.verified",
  "Contract.authority",
  "Contract.domain",
  "Contract.instantiatesUri",
  "Contract.signer.party",
  "Contract.status",
  "Contract.subject",
  "Contract.url",
  "Coverage.beneficiary",
  "Coverage.class.type",
  "Coverage.class.value",
  "Coverage.dependent",
  "Coverage.insurer",
  "Coverage.paymentBy.party",
  "Coverage.policyHolder",
  "Coverage.status",
  "Coverage.subscriberId",
  "CoverageEligibilityRequest.created",
  "CoverageEligibilityRequest.enterer",
  "CoverageEligibilityRequest.facility",
  "CoverageEligibilityRequest.provider",
  "CoverageEligibilityRequest.status",
  "CoverageEligibilityResponse.created",
  "CoverageEligibilityResponse.disposition",
  "CoverageEligibilityResponse.insurer",
  "CoverageEligibilityResponse.outcome",
  "CoverageEligibilityResponse.request",
  "CoverageEligibilityResponse.requestor",
  "CoverageEligibilityResponse.status",
  "DetectedIssue.category",
  "DetectedIssue.identified.ofType(dateTime) | DetectedIssue.identified.ofType(Period)",
  "DetectedIssue.implicated",
  "DetectedIssue.status",
  "DetectedIssue.subject",
  "Device",
  "Device.biologicalSourceEvent",
  "Device.conformsTo",
  "Device.conformsTo.specification",
  "Device.definition",
  "Device.deviceVersion",
  "Device.deviceVersion.value",
  "Device.expirationDate",
  "Device.identifier",
  "Device.location",
  "Device.manufactureDate",
  "Device.manufacturer",
  "Device.modelNumber",
  "Device.name.value | Device.type.coding.display | Device.type.text",
  "Device.parent",
  "Device.serialNumber | Device.identifier.where(type='SNO')",
  "Device.status",
  "Device.type |  Device.definition.resolve().classification.type ",
  "Device.udiCarrier.carrierHRF",
  "Device.udiCarrier.deviceIdentifier",
  "DeviceAlert.condition.code",
  "DeviceAlert.condition.presence",
  "DeviceAlert.condition.timing",
  "DeviceAlert.derivedFrom",
  "DeviceAlert.identifier",
  "DeviceAlert.priority",
  "DeviceAlert.signal.annunciator.reference",
  "DeviceAlert.signal.indication",
  "DeviceAlert.signal.manifestation",
  "DeviceAlert.signal.presence",
  "DeviceAlert.source",
  "DeviceAlert.status",
  "DeviceAlert.subject.where(resolve() is Patient)",
  "DeviceAlert.type",
  "DeviceAssociation.device",
  "DeviceAssociation.identifier",
  "DeviceAssociation.operation.operator",
  "DeviceAssociation.period",
  "DeviceAssociation.relationship",
  "DeviceAssociation.status",
  "DeviceAssociation.subject",
  "DeviceDefinition.conformsTo",
  "DeviceDefinition.conformsTo.category",
  "DeviceDefinition.conformsTo.specification",
  "DeviceDefinition.deviceName.name | DeviceDefinition.classification.type.coding.display | DeviceDefinition.classification.type.text",
  "DeviceDefinition.deviceVersion",
  "DeviceDefinition.hasPart.reference",
  "DeviceDefinition.manufacturer",
  "DeviceDefinition.modelNumber",
  "DeviceDispense.device.concept",
  "DeviceDispense.identifier",
  "DeviceDispense.status",
  "DeviceDispense.subject",
  "DeviceDispense.subject.where(resolve() is Patient)",
  "DeviceMetric.category",
  "DeviceMetric.device",
  "DeviceMetric.identifier",
  "DeviceMetric.type",
  "DeviceRequest.authoredOn",
  "DeviceRequest.code.reference",
  "DeviceRequest.groupIdentifier",
  "DeviceRequest.instantiatesCanonical",
  "DeviceRequest.instantiatesUri",
  "DeviceRequest.insurance",
  "DeviceRequest.intent",
  "DeviceRequest.performer.concept",
  "DeviceRequest.performer.reference",
  "DeviceRequest.replaces",
  "DeviceRequest.requester",
  "DeviceRequest.subject",
  "DeviceUsage.device.concept",
  "DeviceUsage.status",
  "DiagnosticReport.basedOn",
  "DiagnosticReport.category",
  "DiagnosticReport.conclusionCode.concept",
  "DiagnosticReport.conclusionCode.reference",
  "DiagnosticReport.issued",
  "DiagnosticReport.media.link",
  "DiagnosticReport.performer",
  "DiagnosticReport.procedure",
  "DiagnosticReport.result",
  "DiagnosticReport.resultsInterpreter",
  "DiagnosticReport.specimen",
  "DiagnosticReport.study",
  "DiagnosticReport.subject",
  "DocumentReference.attester.party",
  "DocumentReference.author",
  "DocumentReference.basedOn",
  "DocumentReference.bodySite.concept",
  "DocumentReference.bodySite.reference",
  "DocumentReference.category",
  "DocumentReference.content.attachment.contentType",
  "DocumentReference.content.attachment.creation",
  "DocumentReference.content.attachment.language",
  "DocumentReference.content.attachment.url",
  "DocumentReference.context",
  "DocumentReference.custodian",
  "DocumentReference.description",
  "DocumentReference.event.concept",
  "DocumentReference.event.reference",
  "DocumentReference.facilityType",
  "DocumentReference.modality",
  "DocumentReference.period",
  "DocumentReference.practiceSetting",
  "DocumentReference.relatesTo",
  "DocumentReference.relatesTo.code",
  "DocumentReference.relatesTo.target",
  "DocumentReference.securityLabel",
  "DocumentReference.status",
  "DocumentReference.subject",
  "DocumentReference.version",
  "Encounter.account",
  "Encounter.actualPeriod.end",
  "Encounter.actualPeriod.start",
  "Encounter.appointment",
  "Encounter.careTeam",
  "Encounter.class",
  "Encounter.diagnosis.condition.concept",
  "Encounter.diagnosis.condition.reference",
  "Encounter.episodeOfCare",
  "Encounter.length",
  "Encounter.location",
  "Encounter.location.location",
  "Encounter.location.period",
  "Encounter.partOf",
  "Encounter.participant.actor",
  "Encounter.participant.actor.where(resolve() is Practitioner)",
  "Encounter.participant.type",
  "Encounter.reason.value.reference",
  "Encounter.serviceProvider",
  "Encounter.specialArrangement",
  "Encounter.status",
  "Encounter.subject",
  "Encounter.subjectStatus",
  "EncounterHistory.identifier",
  "EncounterHistory.status",
  "EncounterHistory.subject",
  "EncounterHistory.subject.where(resolve() is Patient)",
  "Endpoint.connectionType",
  "Endpoint.identifier",
  "Endpoint.name",
  "Endpoint.payload.type",
  "Endpoint.status",
  "EnrollmentRequest.candidate",
  "EnrollmentRequest.status",
  "EnrollmentResponse.identifier",
  "EnrollmentResponse.request",
  "EnrollmentResponse.status",
  "EpisodeOfCare.careManager.where(resolve() is Practitioner)",
  "EpisodeOfCare.diagnosis.condition.concept",
  "EpisodeOfCare.diagnosis.condition.reference",
  "EpisodeOfCare.managingOrganization",
  "EpisodeOfCare.reason.value.concept",
  "EpisodeOfCare.reason.value.reference",
  "EpisodeOfCare.referralRequest",
  "EpisodeOfCare.subject",
  "ExplanationOfBenefit.careTeam.provider",
  "ExplanationOfBenefit.claim",
  "ExplanationOfBenefit.created",
  "ExplanationOfBenefit.disposition",
  "ExplanationOfBenefit.enterer",
  "ExplanationOfBenefit.facility",
  "ExplanationOfBenefit.insurance.coverage",
  "ExplanationOfBenefit.item.detail.subDetail.udi",
  "ExplanationOfBenefit.item.detail.udi",
  "ExplanationOfBenefit.item.udi",
  "ExplanationOfBenefit.payee.party",
  "ExplanationOfBenefit.procedure.udi",
  "ExplanationOfBenefit.provider",
  "FamilyMemberHistory.relationship",
  "FamilyMemberHistory.sex",
  "FamilyMemberHistory.status",
  "Flag.author",
  "Flag.category",
  "Flag.status",
  "Flag.subject",
  "FormularyItem.code",
  "FormularyItem.identifier",
  "GenomicStudy.analysis.focus",
  "GenomicStudy.identifier",
  "GenomicStudy.status",
  "GenomicStudy.subject",
  "Goal.achievementStatus",
  "Goal.addresses",
  "Goal.category",
  "Goal.description",
  "Goal.lifecycleStatus",
  "Goal.subject",
  "Goal.target.measure",
  "GraphDefinition.start",
  "Group.characteristic",
  "Group.characteristic.code",
  "Group.characteristic.exclude",
  "Group.code",
  "Group.managingEntity",
  "Group.member.entity",
  "Group.membership",
  "Group.type",
  "GuidanceResponse.requestIdentifier",
  "GuidanceResponse.status",
  "GuidanceResponse.subject",
  "HealthcareService.active",
  "HealthcareService.category",
  "HealthcareService.characteristic",
  "HealthcareService.coverageArea",
  "HealthcareService.eligibility.code",
  "HealthcareService.endpoint",
  "HealthcareService.identifier",
  "HealthcareService.location",
  "HealthcareService.name",
  "HealthcareService.offeredIn",
  "HealthcareService.program",
  "HealthcareService.providedBy",
  "HealthcareService.specialty",
  "HealthcareService.type",
  "ImagingSelection.basedOn",
  "ImagingSelection.bodySite.concept",
  "ImagingSelection.category",
  "ImagingSelection.derivedFrom",
  "ImagingSelection.issued",
  "ImagingSelection.status",
  "ImagingSelection.studyUid",
  "ImagingSelection.subject",
  "ImagingStudy.basedOn",
  "ImagingStudy.endpoint | ImagingStudy.series.endpoint",
  "ImagingStudy.reason.reference",
  "ImagingStudy.referrer",
  "ImagingStudy.series.bodySite.concept",
  "ImagingStudy.series.bodySite.reference",
  "ImagingStudy.series.instance.sopClass",
  "ImagingStudy.series.instance.uid",
  "ImagingStudy.series.modality",
  "ImagingStudy.series.performer.actor",
  "ImagingStudy.series.uid",
  "ImagingStudy.started",
  "ImagingStudy.status",
  "ImagingStudy.subject",
  "Immunization.encounter",
  "Immunization.location",
  "Immunization.lotNumber",
  "Immunization.manufacturer.reference",
  "Immunization.performer.actor",
  "Immunization.protocolApplied.series",
  "Immunization.protocolApplied.targetDisease",
  "Immunization.reaction.date",
  "Immunization.reaction.manifestation.reference",
  "Immunization.reason.concept",
  "Immunization.status",
  "Immunization.statusReason",
  "Immunization.vaccineCode",
  "ImmunizationEvaluation.doseStatus",
  "ImmunizationEvaluation.immunizationEvent",
  "ImmunizationEvaluation.status",
  "ImmunizationEvaluation.targetDisease",
  "ImmunizationRecommendation.recommendation.forecastStatus",
  "ImmunizationRecommendation.recommendation.supportingPatientInformation",
  "ImmunizationRecommendation.recommendation.targetDisease",
  "ImmunizationRecommendation.recommendation.vaccineCode",
  "ImplementationGuide.definition.resource.reference",
  "ImplementationGuide.dependsOn.uri",
  "ImplementationGuide.experimental",
  "ImplementationGuide.global.profile",
  "Ingredient.for",
  "Ingredient.function",
  "Ingredient.identifier",
  "Ingredient.manufacturer.manufacturer",
  "Ingredient.role",
  "Ingredient.substance.code.concept",
  "Ingredient.substance.code.reference",
  "Ingredient.substance.strength.concentration.ofType(Quantity)",
  "Ingredient.substance.strength.concentration.ofType(Ratio)",
  "Ingredient.substance.strength.concentration.ofType(Ratio).denominator",
  "Ingredient.substance.strength.concentration.ofType(Ratio).numerator",
  "Ingredient.substance.strength.presentation.ofType(Quantity)",
  "Ingredient.substance.strength.presentation.ofType(Ratio)",
  "Ingredient.substance.strength.presentation.ofType(Ratio).denominator",
  "Ingredient.substance.strength.presentation.ofType(Ratio).numerator",
  "InsurancePlan.coverageArea",
  "InsurancePlan.network",
  "InsurancePlan.product",
  "InsurancePlan.type",
  "InsuranceProduct.administeredBy",
  "InsuranceProduct.contact.address",
  "InsuranceProduct.contact.address.city",
  "InsuranceProduct.contact.address.country",
  "InsuranceProduct.contact.address.postalCode",
  "InsuranceProduct.contact.address.state",
  "InsuranceProduct.contact.address.use",
  "InsuranceProduct.endpoint",
  "InsuranceProduct.identifier",
  "InsuranceProduct.name",
  "InsuranceProduct.name | InsuranceProduct.alias",
  "InsuranceProduct.status",
  "InsuranceProduct.type",
  "InventoryItem.code",
  "InventoryItem.identifier",
  "InventoryItem.instance.subject",
  "InventoryItem.status",
  "InventoryReport.identifier",
  "InventoryReport.inventoryListing.item.item.concept",
  "InventoryReport.inventoryListing.item.item.reference",
  "InventoryReport.status",
  "Invoice.account",
  "Invoice.issuer",
  "Invoice.participant.role",
  "Invoice.recipient",
  "Invoice.status",
  "Invoice.subject",
  "Invoice.totalGross",
  "Invoice.totalNet",
  "Library.content.contentType",
  "Library.subject as CodeableConcept",
  "Library.subject as Reference",
  "Library.subject as canonical",
  "Library.type",
  "Linkage.author",
  "Linkage.item.resource",
  "List.emptyReason",
  "List.entry.item",
  "List.note.text",
  "List.source",
  "List.status",
  "List.subject",
  "List.title",
  "Location.address.city",
  "Location.address.country",
  "Location.address.postalCode",
  "Location.address.state",
  "Location.address.use",
  "Location.endpoint",
  "Location.extension('http://hl7.org/fhir/StructureDefinition/location-boundary-geojson').value",
  "Location.form",
  "Location.identifier",
  "Location.mode",
  "Location.name | Location.alias",
  "Location.operationalStatus",
  "Location.partOf",
  "Location.position",
  "Location.status",
  "Location.type",
  "ManufacturedItemDefinition.identifier",
  "ManufacturedItemDefinition.ingredient",
  "ManufacturedItemDefinition.manufacturedDoseForm",
  "ManufacturedItemDefinition.name",
  "ManufacturedItemDefinition.status",
  "Measure.subject as CodeableConcept",
  "Measure.subject as Reference",
  "Measure.subject as canonical",
  "MeasureReport.location",
  "MeasureReport.measure",
  "MeasureReport.period",
  "MeasureReport.reporter",
  "MeasureReport.status",
  "MeasureReport.subject",
  "Medication.batch.expirationDate",
  "Medication.batch.lotNumber",
  "Medication.doseForm",
  "Medication.identifier",
  "Medication.ingredient.item.concept",
  "Medication.ingredient.item.reference",
  "Medication.marketingAuthorizationHolder",
  "Medication.status",
  "MedicationAdministration.device.reference",
  "MedicationAdministration.encounter | MedicationRequest.encounter",
  "MedicationAdministration.medication.reference | MedicationDispense.medication.reference | MedicationRequest.medication.reference | MedicationStatement.medication.reference",
  "MedicationAdministration.performer.actor.concept",
  "MedicationAdministration.performer.actor.reference",
  "MedicationAdministration.reason.concept",
  "MedicationAdministration.reason.reference",
  "MedicationAdministration.request",
  "MedicationAdministration.status | MedicationDispense.status | MedicationRequest.status | MedicationStatement.status",
  "MedicationAdministration.statusReason",
  "MedicationAdministration.subject",
  "MedicationDispense.authorizingPrescription",
  "MedicationDispense.destination",
  "MedicationDispense.performer.actor",
  "MedicationDispense.receiver",
  "MedicationDispense.recorded",
  "MedicationDispense.subject",
  "MedicationDispense.substitution.responsibleParty",
  "MedicationDispense.whenHandedOver",
  "MedicationDispense.whenPrepared",
  "MedicationKnowledge.code",
  "MedicationKnowledge.cost.source",
  "MedicationKnowledge.definitional.doseForm",
  "MedicationKnowledge.definitional.ingredient.item.reference",
  "MedicationKnowledge.medicineClassification.type",
  "MedicationKnowledge.monitoringProgram.name",
  "MedicationKnowledge.monitoringProgram.type",
  "MedicationKnowledge.monograph.source",
  "MedicationKnowledge.monograph.type",
  "MedicationKnowledge.packaging.cost.cost as CodeableConcept",
  "MedicationKnowledge.packaging.cost.cost as Quantity",
  "MedicationKnowledge.productType",
  "MedicationRequest.authoredOn",
  "MedicationRequest.category",
  "MedicationRequest.dosageInstruction.timing.event | (MedicationRequest.dosageInstruction.timing.repeat.bounds.ofType(Period))",
  "MedicationRequest.groupIdentifier",
  "MedicationRequest.groupIdentifier | MedicationRequest.identifier",
  "MedicationRequest.intent",
  "MedicationRequest.performer",
  "MedicationRequest.performerType",
  "MedicationRequest.priority",
  "MedicationRequest.requester",
  "MedicationRequest.subject",
  "MedicationStatement.adherence.code",
  "MedicationStatement.category",
  "MedicationStatement.effective.ofType(dateTime) | MedicationStatement.effective.ofType(Period)",
  "MedicationStatement.informationSource",
  "MedicationStatement.subject",
  "MedicinalProductDefinition.characteristic.type",
  "MedicinalProductDefinition.characteristic.value.ofType(Quantity) | MedicinalProductDefinition.characteristic.value.ofType(CodeableConcept)",
  "MedicinalProductDefinition.classification",
  "MedicinalProductDefinition.domain",
  "MedicinalProductDefinition.identifier",
  "MedicinalProductDefinition.ingredient",
  "MedicinalProductDefinition.masterFile",
  "MedicinalProductDefinition.name.productName",
  "MedicinalProductDefinition.name.usage.language",
  "MedicinalProductDefinition.status",
  "MedicinalProductDefinition.type",
  "MessageDefinition.category",
  "MessageDefinition.event.ofType(Coding)",
  "MessageDefinition.focus.code",
  "MessageHeader.destination.receiver",
  "MessageHeader.event.ofType(Coding) | MessageHeader.event.ofType(canonical)",
  "MessageHeader.focus",
  "MessageHeader.response.code",
  "MessageHeader.response.identifier",
  "MessageHeader.source.name",
  "MessageHeader.source.sender",
  "MolecularDefinition.identifier",
  "MolecularDefinition.member",
  "MolecularDefinition.moleculeType",
  "MolecularDefinition.topology",
  "MolecularDefinition.type",
  "NamingSystem.contact.telecom",
  "NamingSystem.kind",
  "NamingSystem.responsible",
  "NamingSystem.type",
  "NamingSystem.uniqueId.period",
  "NamingSystem.uniqueId.type",
  "NamingSystem.uniqueId.value",
  "NutritionIntake.nutritionItem.nutritionProduct.concept",
  "NutritionIntake.status",
  "NutritionIntake.subject",
  "NutritionOrder.additive.modularType.concept",
  "NutritionOrder.dateTime",
  "NutritionOrder.enteralFormula.type.concept",
  "NutritionOrder.oralDiet.type",
  "NutritionOrder.requester",
  "NutritionOrder.status",
  "NutritionOrder.subject",
  "NutritionOrder.supplement.type.concept",
  "NutritionProduct.category",
  "NutritionProduct.code",
  "NutritionProduct.ingredient.item.concept",
  "NutritionProduct.instance.expiry",
  "NutritionProduct.instance.identifier",
  "NutritionProduct.instance.lotNumber",
  "Observation",
  "Observation | Observation.component",
  "Observation.basedOn",
  "Observation.category",
  "Observation.component",
  "Observation.component.code",
  "Observation.component.dataAbsentReason",
  "Observation.component.interpretation",
  "Observation.component.value.ofType(CodeableConcept)",
  "Observation.component.value.ofType(Quantity) | Observation.component.value.ofType(SampledData)",
  "Observation.component.value.ofType(Reference)",
  "Observation.component.value.ofType(canonical)",
  "Observation.dataAbsentReason",
  "Observation.dataAbsentReason | Observation.component.dataAbsentReason",
  "Observation.derivedFrom",
  "Observation.focus",
  "Observation.hasMember",
  "Observation.instantiates.ofType(Reference)",
  "Observation.instantiates.ofType(canonical)",
  "Observation.interpretation",
  "Observation.interpretation | Observation.component.interpretation",
  "Observation.method",
  "Observation.partOf",
  "Observation.performer",
  "Observation.specimen",
  "Observation.status",
  "Observation.subject",
  "Observation.value.ofType(CodeableConcept)",
  "Observation.value.ofType(CodeableConcept) | Observation.component.value.ofType(CodeableConcept)",
  "Observation.value.ofType(Quantity) | Observation.value.ofType(SampledData)",
  "Observation.value.ofType(Quantity) | Observation.value.ofType(SampledData) | Observation.component.value.ofType(Quantity) | Observation.component.value.ofType(SampledData)",
  "Observation.value.ofType(Reference)",
  "Observation.value.ofType(dateTime) | Observation.value.ofType(Period)",
  "ObservationDefinition.category",
  "ObservationDefinition.code",
  "ObservationDefinition.experimental",
  "ObservationDefinition.method",
  "OperationDefinition.base",
  "OperationDefinition.code",
  "OperationDefinition.inputProfile",
  "OperationDefinition.instance",
  "OperationDefinition.kind",
  "OperationDefinition.outputProfile",
  "OperationDefinition.system",
  "OperationDefinition.type",
  "Organization.active",
  "Organization.contact.address",
  "Organization.contact.address.country",
  "Organization.contact.address.postalCode",
  "Organization.contact.address.state",
  "Organization.contact.address.use",
  "Organization.endpoint",
  "Organization.identifier | Organization.qualification.identifier",
  "Organization.name",
  "Organization.name | Organization.alias",
  "Organization.partOf",
  "Organization.type",
  "OrganizationAffiliation.active",
  "OrganizationAffiliation.code",
  "OrganizationAffiliation.contact.telecom",
  "OrganizationAffiliation.contact.telecom.where(system='email')",
  "OrganizationAffiliation.contact.telecom.where(system='phone')",
  "OrganizationAffiliation.endpoint",
  "OrganizationAffiliation.healthcareService",
  "OrganizationAffiliation.location",
  "OrganizationAffiliation.network",
  "OrganizationAffiliation.organization",
  "OrganizationAffiliation.participatingOrganization",
  "OrganizationAffiliation.period",
  "OrganizationAffiliation.specialty",
  "PackagedProductDefinition.identifier",
  "PackagedProductDefinition.name",
  "PackagedProductDefinition.packageFor",
  "PackagedProductDefinition.packaging.containedItem.item.reference",
  "PackagedProductDefinition.status",
  "Patient.active",
  "Patient.address | Person.address | Practitioner.address | RelatedPerson.address",
  "Patient.address.city | Person.address.city | Practitioner.address.city | RelatedPerson.address.city",
  "Patient.address.country | Person.address.country | Practitioner.address.country | RelatedPerson.address.country",
  "Patient.address.state | Person.address.state | Practitioner.address.state | RelatedPerson.address.state",
  "Patient.address.use | Person.address.use | Practitioner.address.use | RelatedPerson.address.use",
  "Patient.birthDate | Person.birthDate | RelatedPerson.birthDate",
  "Patient.communication.language",
  "Patient.deceased.exists() and Patient.deceased != false",
  "Patient.extension('http://example.org/fhir/StructureDefinition/participation-agreement').value",
  "Patient.gender | Person.gender | Practitioner.gender | RelatedPerson.gender",
  "Patient.generalPractitioner",
  "Patient.identifier",
  "Patient.link.other",
  "Patient.managingOrganization",
  "Patient.name",
  "Patient.name | Person.name | Practitioner.name | RelatedPerson.name",
  "Patient.name.family | Practitioner.name.family",
  "Patient.telecom | Person.telecom | Practitioner.telecom | PractitionerRole.contact.telecom | RelatedPerson.telecom",
  "Patient.telecom.where(system='email') | Person.telecom.where(system='email') | Practitioner.telecom.where(system='email') | PractitionerRole.contact.telecom.where(system='email') | RelatedPerson.telecom.where(system='email')",
  "Patient.telecom.where(system='phone') | Person.telecom.where(system='phone') | Practitioner.telecom.where(system='phone') | PractitionerRole.contact.telecom.where(system='phone') | RelatedPerson.telecom.where(system='phone')",
  "PaymentNotice.created",
  "PaymentNotice.identifier",
  "PaymentNotice.paymentStatus",
  "PaymentNotice.reporter",
  "PaymentNotice.response",
  "PaymentNotice.status",
  "PaymentReconciliation.allocation.account",
  "PaymentReconciliation.allocation.encounter",
  "PaymentReconciliation.created",
  "PaymentReconciliation.disposition",
  "PaymentReconciliation.identifier",
  "PaymentReconciliation.outcome",
  "PaymentReconciliation.request",
  "PaymentReconciliation.requestor",
  "PaymentReconciliation.status",
  "Permission.identifier",
  "Permission.status",
  "Person.deceased.exists() and Person.deceased != false",
  "Person.link.target",
  "Person.link.target.where(resolve() is Practitioner)",
  "Person.link.target.where(resolve() is RelatedPerson)",
  "Person.managingOrganization",
  "Person.name",
  "Person.name.family",
  "Person.name.given",
  "PersonalRelationship.relationshipType",
  "PersonalRelationship.source",
  "PersonalRelationship.target",
  "PlanDefinition.action.definition.ofType(canonical) | PlanDefinition.action.definition.ofType(uri)",
  "PlanDefinition.subject as CodeableConcept",
  "PlanDefinition.subject as Reference",
  "PlanDefinition.subject as canonical",
  "PlanDefinition.type",
  "Practitioner.active",
  "Practitioner.communication.language",
  "Practitioner.deceased.exists() and Practitioner.deceased != false",
  "Practitioner.identifier | Practitioner.qualification.identifier",
  "Practitioner.qualification",
  "Practitioner.qualification.code",
  "Practitioner.qualification.period",
  "PractitionerRole.active",
  "PractitionerRole.characteristic",
  "PractitionerRole.communication",
  "PractitionerRole.endpoint",
  "PractitionerRole.healthcareService",
  "PractitionerRole.identifier",
  "PractitionerRole.location",
  "PractitionerRole.network",
  "PractitionerRole.organization",
  "PractitionerRole.period",
  "PractitionerRole.practitioner",
  "PractitionerRole.specialty",
  "Procedure.basedOn",
  "Procedure.category",
  "Procedure.location",
  "Procedure.partOf",
  "Procedure.performer.actor",
  "Procedure.reason.concept",
  "Procedure.reason.reference",
  "Procedure.report",
  "Procedure.status",
  "Procedure.subject",
  "Provenance.activity",
  "Provenance.agent.type",
  "Provenance.agent.who",
  "Provenance.basedOn",
  "Provenance.entity.what",
  "Provenance.location",
  "Provenance.recorded",
  "Provenance.signature.type",
  "Provenance.target",
  "Questionnaire.code",
  "Questionnaire.code | Questionnaire.item.code",
  "Questionnaire.item.code",
  "Questionnaire.item.definition",
  "Questionnaire.subjectType",
  "QuestionnaireResponse",
  "QuestionnaireResponse.authored",
  "QuestionnaireResponse.basedOn",
  "QuestionnaireResponse.item.answer.value.ofType(Quantity)",
  "QuestionnaireResponse.item.answer.value.ofType(Reference)",
  "QuestionnaireResponse.item.answer.value.ofType(boolean) | QuestionnaireResponse.item.answer.value.ofType(Coding)",
  "QuestionnaireResponse.item.answer.value.ofType(date) | QuestionnaireResponse.item.answer.value.ofType(dateTime)",
  "QuestionnaireResponse.item.answer.value.ofType(integer) | QuestionnaireResponse.item.answer.value.ofType(decimal)",
  "QuestionnaireResponse.item.answer.value.ofType(string)",
  "QuestionnaireResponse.item.linkId",
  "QuestionnaireResponse.item.where(extension('http://hl7.org/fhir/StructureDefinition/questionnaireresponse-isSubject').exists()).answer.value.ofType(Reference)",
  "QuestionnaireResponse.partOf",
  "QuestionnaireResponse.questionnaire",
  "QuestionnaireResponse.source",
  "QuestionnaireResponse.status",
  "QuestionnaireResponse.subject",
  "RegulatedAuthorization.case.identifier",
  "RegulatedAuthorization.case.type",
  "RegulatedAuthorization.holder",
  "RegulatedAuthorization.identifier",
  "RegulatedAuthorization.status",
  "RegulatedAuthorization.subject",
  "RelatedPerson.active",
  "RelatedPerson.name",
  "RelatedPerson.name.family",
  "RelatedPerson.name.given",
  "RelatedPerson.relationship",
  "RequestOrchestration.action.participant.actor.ofType(Reference) | RequestOrchestration.action.participant.actor.ofType(canonical)",
  "RequestOrchestration.action.resource",
  "RequestOrchestration.author",
  "RequestOrchestration.authoredOn",
  "RequestOrchestration.groupIdentifier",
  "RequestOrchestration.instantiatesCanonical",
  "RequestOrchestration.instantiatesUri",
  "RequestOrchestration.intent",
  "RequestOrchestration.priority",
  "RequestOrchestration.status",
  "RequestOrchestration.subject",
  "Requirements.actor.reference",
  "Requirements.derivedFrom",
  "ResearchStudy.classifier",
  "ResearchStudy.description",
  "ResearchStudy.focus.concept",
  "ResearchStudy.focus.reference",
  "ResearchStudy.identifier",
  "ResearchStudy.keyword",
  "ResearchStudy.name",
  "ResearchStudy.objective.description",
  "ResearchStudy.objective.type",
  "ResearchStudy.partOf",
  "ResearchStudy.period",
  "ResearchStudy.phase",
  "ResearchStudy.progressStatus",
  "ResearchStudy.progressStatus.actual",
  "ResearchStudy.progressStatus.period",
  "ResearchStudy.protocol",
  "ResearchStudy.recruitment.actualNumber",
  "ResearchStudy.recruitment.eligibility",
  "ResearchStudy.recruitment.targetNumber",
  "ResearchStudy.region",
  "ResearchStudy.site",
  "ResearchStudy.status",
  "ResearchStudy.studyDesign",
  "ResearchStudy.title",
  "ResearchSubject.status",
  "ResearchSubject.subject",
  "ResearchSubject.subjectState.code",
  "Resource.id",
  "Resource.language",
  "Resource.meta.lastUpdated",
  "Resource.meta.profile",
  "Resource.meta.security",
  "Resource.meta.source",
  "Resource.meta.tag",
  "RiskAssessment.condition",
  "RiskAssessment.method",
  "RiskAssessment.performer",
  "RiskAssessment.prediction.probability.ofType(decimal)",
  "RiskAssessment.prediction.qualitativeRisk",
  "RiskAssessment.subject",
  "Schedule.active",
  "Schedule.actor",
  "Schedule.identifier",
  "Schedule.name",
  "Schedule.planningHorizon",
  "Schedule.serviceCategory",
  "Schedule.serviceType.reference",
  "Schedule.specialty",
  "SearchParameter.base",
  "SearchParameter.code",
  "SearchParameter.component.definition",
  "SearchParameter.derivedFrom",
  "SearchParameter.target",
  "SearchParameter.type",
  "ServiceRequest.authoredOn",
  "ServiceRequest.basedOn",
  "ServiceRequest.bodySite",
  "ServiceRequest.bodyStructure",
  "ServiceRequest.category",
  "ServiceRequest.code.concept",
  "ServiceRequest.code.reference",
  "ServiceRequest.instantiatesCanonical",
  "ServiceRequest.instantiatesUri",
  "ServiceRequest.intent",
  "ServiceRequest.location.concept",
  "ServiceRequest.location.reference",
  "ServiceRequest.occurrence.ofType(dateTime) | ServiceRequest.occurrence.ofType(Period) | ServiceRequest.occurrence.ofType(Timing)",
  "ServiceRequest.performer",
  "ServiceRequest.performerType",
  "ServiceRequest.priority",
  "ServiceRequest.replaces",
  "ServiceRequest.requester",
  "ServiceRequest.requisition",
  "ServiceRequest.specimen",
  "ServiceRequest.subject",
  "Slot.appointmentType",
  "Slot.identifier",
  "Slot.schedule",
  "Slot.serviceCategory",
  "Slot.serviceType.concept",
  "Slot.serviceType.reference",
  "Slot.specialty",
  "Slot.start",
  "Slot.status",
  "Specimen.accessionIdentifier",
  "Specimen.collection.bodySite.reference",
  "Specimen.collection.collected.ofType(dateTime) | Specimen.collection.collected.ofType(Period)",
  "Specimen.collection.collector",
  "Specimen.collection.procedure",
  "Specimen.container.device.resolve().location",
  "Specimen.container.device.resolve().owner",
  "Specimen.parent",
  "Specimen.request",
  "Specimen.status",
  "Specimen.subject",
  "SpecimenDefinition.experimental",
  "SpecimenDefinition.typeCollected",
  "SpecimenDefinition.typeTested.container.type",
  "SpecimenDefinition.typeTested.isDerived",
  "SpecimenDefinition.typeTested.type",
  "StructureDefinition.abstract",
  "StructureDefinition.baseDefinition",
  "StructureDefinition.context",
  "StructureDefinition.context.expression",
  "StructureDefinition.context.type",
  "StructureDefinition.derivation",
  "StructureDefinition.experimental",
  "StructureDefinition.keyword",
  "StructureDefinition.kind",
  "StructureDefinition.snapshot.element.binding.valueSet",
  "StructureDefinition.snapshot.element.path | StructureDefinition.differential.element.path",
  "StructureDefinition.type",
  "Subscription.channelType",
  "Subscription.contact",
  "Subscription.content",
  "Subscription.contentType",
  "Subscription.endpoint",
  "Subscription.filterBy.event",
  "Subscription.filterBy.value",
  "Subscription.identifier",
  "Subscription.managingEntity",
  "Subscription.status",
  "Subscription.topic",
  "SubscriptionTopic.effectivePeriod",
  "SubscriptionTopic.trigger.description",
  "SubscriptionTopic.trigger.event",
  "SubscriptionTopic.trigger.resource",
  "SubscriptionTopic.url | SubscriptionTopic.derivedFrom",
  "Substance.category",
  "Substance.code.concept",
  "Substance.code.reference",
  "Substance.expiry",
  "Substance.quantity",
  "Substance.status",
  "SubstanceDefinition.classification",
  "SubstanceDefinition.code.code",
  "SubstanceDefinition.domain",
  "SubstanceDefinition.identifier",
  "SubstanceDefinition.name.name",
  "SupplyDelivery.receiver",
  "SupplyDelivery.status",
  "SupplyDelivery.supplier",
  "SupplyRequest.category",
  "SupplyRequest.deliverTo",
  "SupplyRequest.requester",
  "SupplyRequest.status",
  "Task.authoredOn",
  "Task.basedOn",
  "Task.businessStatus",
  "Task.executionPeriod",
  "Task.focus",
  "Task.groupIdentifier",
  "Task.input.value.ofType(Reference)",
  "Task.lastModified",
  "Task.output.value.ofType(Reference)",
  "Task.owner",
  "Task.partOf",
  "Task.performer.actor",
  "Task.priority",
  "Task.requestedPerformer.concept",
  "Task.requestedPerformer.reference",
  "Task.requester",
  "Task.status",
  "TestPlan.category",
  "TestPlan.scope.artifact.ofType(canonical)",
  "TestPlan.scope.artifact.ofType(uri)",
  "TestPlan.testCase.requirement",
  "TestPlan.testCase.requirement.reference",
  "TestReport.identifier",
  "TestReport.issued",
  "TestReport.participant.uri",
  "TestReport.result",
  "TestReport.status",
  "TestReport.testScript",
  "TestReport.tester",
  "TestScript.metadata.capability.description",
  "TestScript.scope",
  "TestScript.scope.conformance.ofType(CodeableConcept)",
  "TestScript.scope.phase.ofType(CodeableConcept)",
  "Transport.identifier",
  "Transport.status",
  "ValueSet.compose.include.system",
  "ValueSet.expansion.contains.code | ValueSet.compose.include.concept.code",
  "ValueSet.expansion.identifier",
  "VerificationResult.attestation.communicationMethod",
  "VerificationResult.attestation.onBehalfOf",
  "VerificationResult.attestation.who",
  "VerificationResult.primarySource.type",
  "VerificationResult.primarySource.who",
  "VerificationResult.status",
  "VerificationResult.statusDate",
  "VerificationResult.target",
  "VerificationResult.validator.organization",
  "VisionPrescription.dateWritten",
  "VisionPrescription.prescriber",
  "VisionPrescription.status",
  "id",
  "requestedPeriod",
  "value.ofType(string)"
]
